plugins {
    id 'java'
//    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '8.4'
    id 'checkstyle'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // REST Assured
    implementation 'io.rest-assured:rest-assured:5.5.0'
    implementation 'io.rest-assured:json-path:5.5.0'
    implementation 'io.rest-assured:xml-path:5.5.0'

    // TestNG
    testImplementation 'org.testng:testng:7.7.1'

    // Jackson for JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.12'

    // Assertions
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // JSON Schema Validation
    testImplementation 'io.rest-assured:json-schema-validator:5.5.0'

    // Allure Reporting
//    testImplementation 'io.qameta.allure:allure-testng:2.22.0'
//    testImplementation 'io.qameta.allure:allure-rest-assured:2.22.0'
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'

        // Enable parallel execution
        parallel = 'classes'
        threadCount = 4
    }

    // System properties for test execution
    systemProperties = [
            'rest.assured.baseUrl': 'https://jsonplaceholder.typicode.com',
//            'allure.results.directory': 'build/allure-results'
    ]

    // Test output configuration
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Checkstyle task configuration
tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = true
        html.required = true
    }
}

// Task to generate Allure report
//task generateAllureReport(type: Exec) {
//    commandLine 'allure', 'generate', 'build/allure-results', '--clean'
//}

// Checkstyle configuration
// The latest stable version is used
checkstyle {
    toolVersion = '10.12.5'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = false
}


